// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: baepo/node/v1/runtime_init.proto

package nodev1pbconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/baepo-cloud/baepo-proto/go/baepo/node/v1"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// RuntimeInitName is the fully-qualified name of the RuntimeInit service.
	RuntimeInitName = "baepo.node.v1.RuntimeInit"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// RuntimeInitWriteLogProcedure is the fully-qualified name of the RuntimeInit's WriteLog RPC.
	RuntimeInitWriteLogProcedure = "/baepo.node.v1.RuntimeInit/WriteLog"
	// RuntimeInitUpdateContainerStateProcedure is the fully-qualified name of the RuntimeInit's
	// UpdateContainerState RPC.
	RuntimeInitUpdateContainerStateProcedure = "/baepo.node.v1.RuntimeInit/UpdateContainerState"
)

// RuntimeInitClient is a client for the baepo.node.v1.RuntimeInit service.
type RuntimeInitClient interface {
	WriteLog(context.Context) *connect.BidiStreamForClient[v1.RuntimeInitWriteLogRequest, emptypb.Empty]
	UpdateContainerState(context.Context, *connect.Request[v1.RuntimeInitUpdateContainerStateRequest]) (*connect.Response[emptypb.Empty], error)
}

// NewRuntimeInitClient constructs a client for the baepo.node.v1.RuntimeInit service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewRuntimeInitClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) RuntimeInitClient {
	baseURL = strings.TrimRight(baseURL, "/")
	runtimeInitMethods := v1.File_baepo_node_v1_runtime_init_proto.Services().ByName("RuntimeInit").Methods()
	return &runtimeInitClient{
		writeLog: connect.NewClient[v1.RuntimeInitWriteLogRequest, emptypb.Empty](
			httpClient,
			baseURL+RuntimeInitWriteLogProcedure,
			connect.WithSchema(runtimeInitMethods.ByName("WriteLog")),
			connect.WithClientOptions(opts...),
		),
		updateContainerState: connect.NewClient[v1.RuntimeInitUpdateContainerStateRequest, emptypb.Empty](
			httpClient,
			baseURL+RuntimeInitUpdateContainerStateProcedure,
			connect.WithSchema(runtimeInitMethods.ByName("UpdateContainerState")),
			connect.WithClientOptions(opts...),
		),
	}
}

// runtimeInitClient implements RuntimeInitClient.
type runtimeInitClient struct {
	writeLog             *connect.Client[v1.RuntimeInitWriteLogRequest, emptypb.Empty]
	updateContainerState *connect.Client[v1.RuntimeInitUpdateContainerStateRequest, emptypb.Empty]
}

// WriteLog calls baepo.node.v1.RuntimeInit.WriteLog.
func (c *runtimeInitClient) WriteLog(ctx context.Context) *connect.BidiStreamForClient[v1.RuntimeInitWriteLogRequest, emptypb.Empty] {
	return c.writeLog.CallBidiStream(ctx)
}

// UpdateContainerState calls baepo.node.v1.RuntimeInit.UpdateContainerState.
func (c *runtimeInitClient) UpdateContainerState(ctx context.Context, req *connect.Request[v1.RuntimeInitUpdateContainerStateRequest]) (*connect.Response[emptypb.Empty], error) {
	return c.updateContainerState.CallUnary(ctx, req)
}

// RuntimeInitHandler is an implementation of the baepo.node.v1.RuntimeInit service.
type RuntimeInitHandler interface {
	WriteLog(context.Context, *connect.BidiStream[v1.RuntimeInitWriteLogRequest, emptypb.Empty]) error
	UpdateContainerState(context.Context, *connect.Request[v1.RuntimeInitUpdateContainerStateRequest]) (*connect.Response[emptypb.Empty], error)
}

// NewRuntimeInitHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewRuntimeInitHandler(svc RuntimeInitHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	runtimeInitMethods := v1.File_baepo_node_v1_runtime_init_proto.Services().ByName("RuntimeInit").Methods()
	runtimeInitWriteLogHandler := connect.NewBidiStreamHandler(
		RuntimeInitWriteLogProcedure,
		svc.WriteLog,
		connect.WithSchema(runtimeInitMethods.ByName("WriteLog")),
		connect.WithHandlerOptions(opts...),
	)
	runtimeInitUpdateContainerStateHandler := connect.NewUnaryHandler(
		RuntimeInitUpdateContainerStateProcedure,
		svc.UpdateContainerState,
		connect.WithSchema(runtimeInitMethods.ByName("UpdateContainerState")),
		connect.WithHandlerOptions(opts...),
	)
	return "/baepo.node.v1.RuntimeInit/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case RuntimeInitWriteLogProcedure:
			runtimeInitWriteLogHandler.ServeHTTP(w, r)
		case RuntimeInitUpdateContainerStateProcedure:
			runtimeInitUpdateContainerStateHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedRuntimeInitHandler returns CodeUnimplemented from all methods.
type UnimplementedRuntimeInitHandler struct{}

func (UnimplementedRuntimeInitHandler) WriteLog(context.Context, *connect.BidiStream[v1.RuntimeInitWriteLogRequest, emptypb.Empty]) error {
	return connect.NewError(connect.CodeUnimplemented, errors.New("baepo.node.v1.RuntimeInit.WriteLog is not implemented"))
}

func (UnimplementedRuntimeInitHandler) UpdateContainerState(context.Context, *connect.Request[v1.RuntimeInitUpdateContainerStateRequest]) (*connect.Response[emptypb.Empty], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("baepo.node.v1.RuntimeInit.UpdateContainerState is not implemented"))
}
