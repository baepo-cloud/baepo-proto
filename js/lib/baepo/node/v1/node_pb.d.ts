// @generated by protoc-gen-es v2.2.5
// @generated from file baepo/node/v1/node.proto (package baepo.node.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file baepo/node/v1/node.proto.
 */
export declare const file_baepo_node_v1_node: GenFile;

/**
 * @generated from message baepo.node.v1.NodeStartMachineRequest
 */
export declare type NodeStartMachineRequest = Message<"baepo.node.v1.NodeStartMachineRequest"> & {
  /**
   * @generated from field: string machine_id = 1;
   */
  machineId: string;

  /**
   * @generated from field: uint32 v_cpus = 2;
   */
  vCpus: number;

  /**
   * @generated from field: uint64 memory_mb = 3;
   */
  memoryMb: bigint;

  /**
   * @generated from field: map<string, string> env = 4;
   */
  env: { [key: string]: string };

  /**
   * @generated from field: string image = 5;
   */
  image: string;
};

/**
 * Describes the message baepo.node.v1.NodeStartMachineRequest.
 * Use `create(NodeStartMachineRequestSchema)` to create a new message.
 */
export declare const NodeStartMachineRequestSchema: GenMessage<NodeStartMachineRequest>;

/**
 * @generated from message baepo.node.v1.NodeStartMachineReply
 */
export declare type NodeStartMachineReply = Message<"baepo.node.v1.NodeStartMachineReply"> & {
  /**
   * @generated from field: baepo.node.v1.NodeMachine machine = 1;
   */
  machine?: NodeMachine;
};

/**
 * Describes the message baepo.node.v1.NodeStartMachineReply.
 * Use `create(NodeStartMachineReplySchema)` to create a new message.
 */
export declare const NodeStartMachineReplySchema: GenMessage<NodeStartMachineReply>;

/**
 * @generated from message baepo.node.v1.NodeMachine
 */
export declare type NodeMachine = Message<"baepo.node.v1.NodeMachine"> & {
  /**
   * @generated from field: string machine_id = 1;
   */
  machineId: string;

  /**
   * @generated from field: baepo.node.v1.NodeMachineState state = 2;
   */
  state: NodeMachineState;

  /**
   * @generated from field: int64 pid = 3;
   */
  pid: bigint;

  /**
   * @generated from field: string tap_interface = 4;
   */
  tapInterface: string;

  /**
   * @generated from field: string mac_address = 5;
   */
  macAddress: string;

  /**
   * @generated from field: string ip_address = 6;
   */
  ipAddress: string;
};

/**
 * Describes the message baepo.node.v1.NodeMachine.
 * Use `create(NodeMachineSchema)` to create a new message.
 */
export declare const NodeMachineSchema: GenMessage<NodeMachine>;

/**
 * @generated from message baepo.node.v1.NodeStopMachineRequest
 */
export declare type NodeStopMachineRequest = Message<"baepo.node.v1.NodeStopMachineRequest"> & {
  /**
   * @generated from field: string machine_id = 1;
   */
  machineId: string;
};

/**
 * Describes the message baepo.node.v1.NodeStopMachineRequest.
 * Use `create(NodeStopMachineRequestSchema)` to create a new message.
 */
export declare const NodeStopMachineRequestSchema: GenMessage<NodeStopMachineRequest>;

/**
 * @generated from message baepo.node.v1.NodeHealthcheckMachineRequest
 */
export declare type NodeHealthcheckMachineRequest = Message<"baepo.node.v1.NodeHealthcheckMachineRequest"> & {
  /**
   * @generated from field: string machine_id = 1;
   */
  machineId: string;
};

/**
 * Describes the message baepo.node.v1.NodeHealthcheckMachineRequest.
 * Use `create(NodeHealthcheckMachineRequestSchema)` to create a new message.
 */
export declare const NodeHealthcheckMachineRequestSchema: GenMessage<NodeHealthcheckMachineRequest>;

/**
 * @generated from message baepo.node.v1.NodeHealthcheckMachineReply
 */
export declare type NodeHealthcheckMachineReply = Message<"baepo.node.v1.NodeHealthcheckMachineReply"> & {
  /**
   * @generated from field: baepo.node.v1.NodeMachine machine = 1;
   */
  machine?: NodeMachine;
};

/**
 * Describes the message baepo.node.v1.NodeHealthcheckMachineReply.
 * Use `create(NodeHealthcheckMachineReplySchema)` to create a new message.
 */
export declare const NodeHealthcheckMachineReplySchema: GenMessage<NodeHealthcheckMachineReply>;

/**
 * @generated from enum baepo.node.v1.NodeMachineState
 */
export enum NodeMachineState {
  /**
   * @generated from enum value: NodeMachineState_Unknown = 0;
   */
  NodeMachineState_Unknown = 0,

  /**
   * @generated from enum value: NodeMachineState_Running = 1;
   */
  NodeMachineState_Running = 1,

  /**
   * @generated from enum value: NodeMachineState_Degraded = 2;
   */
  NodeMachineState_Degraded = 2,

  /**
   * @generated from enum value: NodeMachineState_Failed = 3;
   */
  NodeMachineState_Failed = 3,
}

/**
 * Describes the enum baepo.node.v1.NodeMachineState.
 */
export declare const NodeMachineStateSchema: GenEnum<NodeMachineState>;

/**
 * @generated from service baepo.node.v1.NodeService
 */
export declare const NodeService: GenService<{
  /**
   * @generated from rpc baepo.node.v1.NodeService.StartMachine
   */
  startMachine: {
    methodKind: "unary";
    input: typeof NodeStartMachineRequestSchema;
    output: typeof NodeStartMachineReplySchema;
  },
  /**
   * @generated from rpc baepo.node.v1.NodeService.StopMachine
   */
  stopMachine: {
    methodKind: "unary";
    input: typeof NodeStopMachineRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc baepo.node.v1.NodeService.HealthcheckMachine
   */
  healthcheckMachine: {
    methodKind: "unary";
    input: typeof NodeHealthcheckMachineRequestSchema;
    output: typeof NodeHealthcheckMachineReplySchema;
  },
}>;

