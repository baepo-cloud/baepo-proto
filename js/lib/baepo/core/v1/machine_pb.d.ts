// @generated by protoc-gen-es v2.2.5 with parameter "import_extension=js"
// @generated from file baepo/core/v1/machine.proto (package baepo.core.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file baepo/core/v1/machine.proto.
 */
export declare const file_baepo_core_v1_machine: GenFile;

/**
 * @generated from message baepo.core.v1.MachineSpec
 */
export declare type MachineSpec = Message<"baepo.core.v1.MachineSpec"> & {
  /**
   * @generated from field: uint32 cpus = 1;
   */
  cpus: number;

  /**
   * @generated from field: uint64 memory_mb = 2;
   */
  memoryMb: bigint;

  /**
   * @generated from field: repeated baepo.core.v1.MachineContainerSpec containers = 3;
   */
  containers: MachineContainerSpec[];

  /**
   * @generated from field: optional uint64 timeout = 4;
   */
  timeout?: bigint;
};

/**
 * Describes the message baepo.core.v1.MachineSpec.
 * Use `create(MachineSpecSchema)` to create a new message.
 */
export declare const MachineSpecSchema: GenMessage<MachineSpec>;

/**
 * @generated from message baepo.core.v1.MachineContainerSpec
 */
export declare type MachineContainerSpec = Message<"baepo.core.v1.MachineContainerSpec"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string image = 2;
   */
  image: string;

  /**
   * @generated from field: map<string, string> env = 3;
   */
  env: { [key: string]: string };

  /**
   * @generated from field: repeated string command = 4;
   */
  command: string[];

  /**
   * @generated from field: baepo.core.v1.MachineContainerHealthcheckSpec healthcheck = 5;
   */
  healthcheck?: MachineContainerHealthcheckSpec;

  /**
   * @generated from field: optional string working_dir = 6;
   */
  workingDir?: string;

  /**
   * @generated from field: baepo.core.v1.MachineContainerRestartSpec restart = 7;
   */
  restart?: MachineContainerRestartSpec;
};

/**
 * Describes the message baepo.core.v1.MachineContainerSpec.
 * Use `create(MachineContainerSpecSchema)` to create a new message.
 */
export declare const MachineContainerSpecSchema: GenMessage<MachineContainerSpec>;

/**
 * @generated from message baepo.core.v1.MachineContainerRestartSpec
 */
export declare type MachineContainerRestartSpec = Message<"baepo.core.v1.MachineContainerRestartSpec"> & {
  /**
   * @generated from field: baepo.core.v1.MachineContainerRestartSpec.Policy policy = 1;
   */
  policy: MachineContainerRestartSpec_Policy;

  /**
   * @generated from field: int32 max_retries = 2;
   */
  maxRetries: number;
};

/**
 * Describes the message baepo.core.v1.MachineContainerRestartSpec.
 * Use `create(MachineContainerRestartSpecSchema)` to create a new message.
 */
export declare const MachineContainerRestartSpecSchema: GenMessage<MachineContainerRestartSpec>;

/**
 * @generated from enum baepo.core.v1.MachineContainerRestartSpec.Policy
 */
export enum MachineContainerRestartSpec_Policy {
  /**
   * @generated from enum value: Policy_Unknown = 0;
   */
  Unknown = 0,

  /**
   * @generated from enum value: Policy_No = 1;
   */
  No = 1,

  /**
   * @generated from enum value: Policy_OnFailure = 2;
   */
  OnFailure = 2,

  /**
   * @generated from enum value: Policy_Always = 3;
   */
  Always = 3,
}

/**
 * Describes the enum baepo.core.v1.MachineContainerRestartSpec.Policy.
 */
export declare const MachineContainerRestartSpec_PolicySchema: GenEnum<MachineContainerRestartSpec_Policy>;

/**
 * @generated from message baepo.core.v1.MachineContainerHealthcheckSpec
 */
export declare type MachineContainerHealthcheckSpec = Message<"baepo.core.v1.MachineContainerHealthcheckSpec"> & {
  /**
   * @generated from field: int32 initial_delay_seconds = 1;
   */
  initialDelaySeconds: number;

  /**
   * @generated from field: int32 period_seconds = 2;
   */
  periodSeconds: number;

  /**
   * @generated from oneof baepo.core.v1.MachineContainerHealthcheckSpec.type
   */
  type: {
    /**
     * @generated from field: baepo.core.v1.MachineContainerHealthcheckSpec.HttpHealthcheckSpec http = 3;
     */
    value: MachineContainerHealthcheckSpec_HttpHealthcheckSpec;
    case: "http";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message baepo.core.v1.MachineContainerHealthcheckSpec.
 * Use `create(MachineContainerHealthcheckSpecSchema)` to create a new message.
 */
export declare const MachineContainerHealthcheckSpecSchema: GenMessage<MachineContainerHealthcheckSpec>;

/**
 * @generated from message baepo.core.v1.MachineContainerHealthcheckSpec.HttpHealthcheckSpec
 */
export declare type MachineContainerHealthcheckSpec_HttpHealthcheckSpec = Message<"baepo.core.v1.MachineContainerHealthcheckSpec.HttpHealthcheckSpec"> & {
  /**
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * @generated from field: int32 port = 3;
   */
  port: number;

  /**
   * @generated from field: map<string, string> headers = 4;
   */
  headers: { [key: string]: string };
};

/**
 * Describes the message baepo.core.v1.MachineContainerHealthcheckSpec.HttpHealthcheckSpec.
 * Use `create(MachineContainerHealthcheckSpec_HttpHealthcheckSpecSchema)` to create a new message.
 */
export declare const MachineContainerHealthcheckSpec_HttpHealthcheckSpecSchema: GenMessage<MachineContainerHealthcheckSpec_HttpHealthcheckSpec>;

/**
 * @generated from message baepo.core.v1.MachineEvent
 */
export declare type MachineEvent = Message<"baepo.core.v1.MachineEvent"> & {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId: string;

  /**
   * @generated from field: string machine_id = 2;
   */
  machineId: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;

  /**
   * @generated from oneof baepo.core.v1.MachineEvent.event
   */
  event: {
    /**
     * @generated from field: baepo.core.v1.MachineEvent.StateChangedEvent state_changed = 4;
     */
    value: MachineEvent_StateChangedEvent;
    case: "stateChanged";
  } | {
    /**
     * @generated from field: baepo.core.v1.MachineEvent.StartedEvent started = 5;
     */
    value: MachineEvent_StartedEvent;
    case: "started";
  } | {
    /**
     * @generated from field: baepo.core.v1.MachineEvent.TerminatedEvent terminated = 6;
     */
    value: MachineEvent_TerminatedEvent;
    case: "terminated";
  } | {
    /**
     * @generated from field: baepo.core.v1.MachineEvent.DesiredStateChangedEvent desired_state_changed = 7;
     */
    value: MachineEvent_DesiredStateChangedEvent;
    case: "desiredStateChanged";
  } | {
    /**
     * @generated from field: baepo.core.v1.MachineEvent.ReconciliationStartedEvent reconciliation_started = 8;
     */
    value: MachineEvent_ReconciliationStartedEvent;
    case: "reconciliationStarted";
  } | {
    /**
     * @generated from field: baepo.core.v1.MachineEvent.ReconciliationCompletedEvent reconciliation_completed = 9;
     */
    value: MachineEvent_ReconciliationCompletedEvent;
    case: "reconciliationCompleted";
  } | {
    /**
     * @generated from field: baepo.core.v1.MachineEvent.ContainerStateChangedEvent healthcheck_event = 10;
     */
    value: MachineEvent_ContainerStateChangedEvent;
    case: "healthcheckEvent";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message baepo.core.v1.MachineEvent.
 * Use `create(MachineEventSchema)` to create a new message.
 */
export declare const MachineEventSchema: GenMessage<MachineEvent>;

/**
 * @generated from message baepo.core.v1.MachineEvent.StateChangedEvent
 */
export declare type MachineEvent_StateChangedEvent = Message<"baepo.core.v1.MachineEvent.StateChangedEvent"> & {
  /**
   * @generated from field: baepo.core.v1.MachineState state = 1;
   */
  state: MachineState;
};

/**
 * Describes the message baepo.core.v1.MachineEvent.StateChangedEvent.
 * Use `create(MachineEvent_StateChangedEventSchema)` to create a new message.
 */
export declare const MachineEvent_StateChangedEventSchema: GenMessage<MachineEvent_StateChangedEvent>;

/**
 * @generated from message baepo.core.v1.MachineEvent.StartedEvent
 */
export declare type MachineEvent_StartedEvent = Message<"baepo.core.v1.MachineEvent.StartedEvent"> & {
  /**
   * @generated from field: optional google.protobuf.Timestamp expires_at = 1;
   */
  expiresAt?: Timestamp;
};

/**
 * Describes the message baepo.core.v1.MachineEvent.StartedEvent.
 * Use `create(MachineEvent_StartedEventSchema)` to create a new message.
 */
export declare const MachineEvent_StartedEventSchema: GenMessage<MachineEvent_StartedEvent>;

/**
 * @generated from message baepo.core.v1.MachineEvent.TerminatedEvent
 */
export declare type MachineEvent_TerminatedEvent = Message<"baepo.core.v1.MachineEvent.TerminatedEvent"> & {
  /**
   * @generated from field: baepo.core.v1.MachineTerminationCause cause = 1;
   */
  cause: MachineTerminationCause;

  /**
   * @generated from field: optional string termination_details = 2;
   */
  terminationDetails?: string;
};

/**
 * Describes the message baepo.core.v1.MachineEvent.TerminatedEvent.
 * Use `create(MachineEvent_TerminatedEventSchema)` to create a new message.
 */
export declare const MachineEvent_TerminatedEventSchema: GenMessage<MachineEvent_TerminatedEvent>;

/**
 * @generated from message baepo.core.v1.MachineEvent.DesiredStateChangedEvent
 */
export declare type MachineEvent_DesiredStateChangedEvent = Message<"baepo.core.v1.MachineEvent.DesiredStateChangedEvent"> & {
  /**
   * @generated from field: baepo.core.v1.MachineDesiredState desired_state = 1;
   */
  desiredState: MachineDesiredState;
};

/**
 * Describes the message baepo.core.v1.MachineEvent.DesiredStateChangedEvent.
 * Use `create(MachineEvent_DesiredStateChangedEventSchema)` to create a new message.
 */
export declare const MachineEvent_DesiredStateChangedEventSchema: GenMessage<MachineEvent_DesiredStateChangedEvent>;

/**
 * @generated from message baepo.core.v1.MachineEvent.ReconciliationStartedEvent
 */
export declare type MachineEvent_ReconciliationStartedEvent = Message<"baepo.core.v1.MachineEvent.ReconciliationStartedEvent"> & {
  /**
   * @generated from field: baepo.core.v1.MachineDesiredState desired_state = 1;
   */
  desiredState: MachineDesiredState;
};

/**
 * Describes the message baepo.core.v1.MachineEvent.ReconciliationStartedEvent.
 * Use `create(MachineEvent_ReconciliationStartedEventSchema)` to create a new message.
 */
export declare const MachineEvent_ReconciliationStartedEventSchema: GenMessage<MachineEvent_ReconciliationStartedEvent>;

/**
 * @generated from message baepo.core.v1.MachineEvent.ReconciliationCompletedEvent
 */
export declare type MachineEvent_ReconciliationCompletedEvent = Message<"baepo.core.v1.MachineEvent.ReconciliationCompletedEvent"> & {
  /**
   * @generated from field: baepo.core.v1.MachineDesiredState desired_state = 1;
   */
  desiredState: MachineDesiredState;

  /**
   * @generated from field: optional string error = 2;
   */
  error?: string;
};

/**
 * Describes the message baepo.core.v1.MachineEvent.ReconciliationCompletedEvent.
 * Use `create(MachineEvent_ReconciliationCompletedEventSchema)` to create a new message.
 */
export declare const MachineEvent_ReconciliationCompletedEventSchema: GenMessage<MachineEvent_ReconciliationCompletedEvent>;

/**
 * @generated from message baepo.core.v1.MachineEvent.ContainerStateChangedEvent
 */
export declare type MachineEvent_ContainerStateChangedEvent = Message<"baepo.core.v1.MachineEvent.ContainerStateChangedEvent"> & {
  /**
   * @generated from field: string container_name = 1;
   */
  containerName: string;

  /**
   * @generated from field: baepo.core.v1.MachineContainerState state = 2;
   */
  state: MachineContainerState;

  /**
   * @generated from field: optional google.protobuf.Timestamp started_at = 3;
   */
  startedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp exited_at = 4;
   */
  exitedAt?: Timestamp;

  /**
   * @generated from field: optional int32 exit_code = 5;
   */
  exitCode?: number;

  /**
   * @generated from field: optional string exit_error = 6;
   */
  exitError?: string;

  /**
   * @generated from field: bool healthy = 7;
   */
  healthy: boolean;

  /**
   * @generated from field: optional string healthcheck_error = 8;
   */
  healthcheckError?: string;

  /**
   * @generated from field: int32 restart_count = 9;
   */
  restartCount: number;
};

/**
 * Describes the message baepo.core.v1.MachineEvent.ContainerStateChangedEvent.
 * Use `create(MachineEvent_ContainerStateChangedEventSchema)` to create a new message.
 */
export declare const MachineEvent_ContainerStateChangedEventSchema: GenMessage<MachineEvent_ContainerStateChangedEvent>;

/**
 * @generated from enum baepo.core.v1.MachineState
 */
export enum MachineState {
  /**
   * @generated from enum value: MachineState_Unknown = 0;
   */
  MachineState_Unknown = 0,

  /**
   * @generated from enum value: MachineState_Pending = 1;
   */
  MachineState_Pending = 1,

  /**
   * @generated from enum value: MachineState_Starting = 2;
   */
  MachineState_Starting = 2,

  /**
   * @generated from enum value: MachineState_Running = 3;
   */
  MachineState_Running = 3,

  /**
   * @generated from enum value: MachineState_Degraded = 4;
   */
  MachineState_Degraded = 4,

  /**
   * @generated from enum value: MachineState_Error = 5;
   */
  MachineState_Error = 5,

  /**
   * @generated from enum value: MachineState_Terminating = 6;
   */
  MachineState_Terminating = 6,

  /**
   * @generated from enum value: MachineState_Terminated = 7;
   */
  MachineState_Terminated = 7,
}

/**
 * Describes the enum baepo.core.v1.MachineState.
 */
export declare const MachineStateSchema: GenEnum<MachineState>;

/**
 * @generated from enum baepo.core.v1.MachineDesiredState
 */
export enum MachineDesiredState {
  /**
   * @generated from enum value: MachineDesiredState_Unknown = 0;
   */
  MachineDesiredState_Unknown = 0,

  /**
   * @generated from enum value: MachineDesiredState_Pending = 1;
   */
  MachineDesiredState_Pending = 1,

  /**
   * @generated from enum value: MachineDesiredState_Running = 2;
   */
  MachineDesiredState_Running = 2,

  /**
   * @generated from enum value: MachineDesiredState_Terminated = 3;
   */
  MachineDesiredState_Terminated = 3,
}

/**
 * Describes the enum baepo.core.v1.MachineDesiredState.
 */
export declare const MachineDesiredStateSchema: GenEnum<MachineDesiredState>;

/**
 * @generated from enum baepo.core.v1.MachineTerminationCause
 */
export enum MachineTerminationCause {
  /**
   * @generated from enum value: MachineTerminationCause_Unknown = 0;
   */
  MachineTerminationCause_Unknown = 0,

  /**
   * @generated from enum value: MachineTerminationCause_HealthcheckFailed = 1;
   */
  MachineTerminationCause_HealthcheckFailed = 1,

  /**
   * @generated from enum value: MachineTerminationCause_ManuallyRequested = 2;
   */
  MachineTerminationCause_ManuallyRequested = 2,

  /**
   * @generated from enum value: MachineTerminationCause_InternalError = 3;
   */
  MachineTerminationCause_InternalError = 3,

  /**
   * @generated from enum value: MachineTerminationCause_NoNodeAvailable = 4;
   */
  MachineTerminationCause_NoNodeAvailable = 4,

  /**
   * @generated from enum value: MachineTerminationCause_Expired = 5;
   */
  MachineTerminationCause_Expired = 5,
}

/**
 * Describes the enum baepo.core.v1.MachineTerminationCause.
 */
export declare const MachineTerminationCauseSchema: GenEnum<MachineTerminationCause>;

/**
 * @generated from enum baepo.core.v1.MachineContainerState
 */
export enum MachineContainerState {
  /**
   * @generated from enum value: MachineContainerState_Unknown = 0;
   */
  MachineContainerState_Unknown = 0,

  /**
   * @generated from enum value: MachineContainerState_Running = 1;
   */
  MachineContainerState_Running = 1,

  /**
   * @generated from enum value: MachineContainerState_Exited = 2;
   */
  MachineContainerState_Exited = 2,
}

/**
 * Describes the enum baepo.core.v1.MachineContainerState.
 */
export declare const MachineContainerStateSchema: GenEnum<MachineContainerState>;

